{"ast":null,"code":"var _jsxFileName = \"/home/ricky/Development/Phase 4/Clone/FrontEnd/src/components/EachAlbum.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AlbumBanner from \"./AlbumBanner\";\nimport Songs from \"./Songs\";\nimport \"../css/EachAlbum.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EachAlbum = _ref => {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [album, setAlbum] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`/albums/${id}`).then(res => res.json()).then(album => {\n      setAlbum(album);\n      setIsLoaded(true);\n    });\n  }, [id]);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  const {\n    year,\n    label,\n    artist\n  } = album;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"album_body\",\n    children: [/*#__PURE__*/_jsxDEV(AlbumBanner, {\n      album: album,\n      artist: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"album_list_item\",\n      children: album.songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Songs, {\n          song: song,\n          artist: artist,\n          user: user\n        }, song.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"album_details\",\n      children: [year, \", \", label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(EachAlbum, \"bIFzFOfaP/GACptG1zODQFmhIPg=\", false, function () {\n  return [useParams];\n});\n_c = EachAlbum;\nexport default EachAlbum;\nvar _c;\n$RefreshReg$(_c, \"EachAlbum\");","map":{"version":3,"names":["React","useEffect","useState","useParams","AlbumBanner","Songs","jsxDEV","_jsxDEV","EachAlbum","_ref","_s","user","isLoaded","setIsLoaded","album","setAlbum","id","fetch","then","res","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","year","label","artist","songs","map","song","_c","$RefreshReg$"],"sources":["/home/ricky/Development/Phase 4/Clone/FrontEnd/src/components/EachAlbum.js"],"sourcesContent":["import React from 'react'\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AlbumBanner from \"./AlbumBanner\";\nimport Songs from \"./Songs\";\nimport \"../css/EachAlbum.css\";\n\nconst EachAlbum = ( { user } ) => {\n\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [album, setAlbum] = useState([])\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetch(`/albums/${id}`)\n    .then((res) => res.json())\n    .then(album => {\n      setAlbum(album);\n      setIsLoaded(true)\n  })\n}, [id])\n\n\nif (!isLoaded) return <h2 className=''>Loading...</h2>\n\nconst {year, label, artist} = album\n\n  return (\n\n    <div className=\"album_body\">\n      <AlbumBanner album={album} artist={artist}/>\n      <ol className=\"album_list_item\">\n        {album.songs.map(song =>\n          <li ><Songs key = {song.id} song={song} artist={artist} user={user}/></li>\n        )}\n      </ol>\n      <p className=\"album_details\">{year}, {label}</p>   \n    </div>\n  );\n};\n\nexport default EachAlbum;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAE1B,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEc;EAAG,CAAC,GAAGb,SAAS,EAAE;EAE1BF,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAE,WAAUD,EAAG,EAAC,CAAC,CACrBE,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAACJ,KAAK,IAAI;MACbC,QAAQ,CAACD,KAAK,CAAC;MACfD,WAAW,CAAC,IAAI,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACG,EAAE,CAAC,CAAC;EAGR,IAAI,CAACJ,QAAQ,EAAE,oBAAOL,OAAA;IAAIc,SAAS,EAAC,EAAE;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;EAEtD,MAAM;IAACC,IAAI;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGf,KAAK;EAEjC,oBAEEP,OAAA;IAAKc,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBf,OAAA,CAACH,WAAW;MAACU,KAAK,EAAEA,KAAM;MAACe,MAAM,EAAEA;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5CnB,OAAA;MAAIc,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC5BR,KAAK,CAACgB,KAAK,CAACC,GAAG,CAACC,IAAI,iBACnBzB,OAAA;QAAAe,QAAA,eAAKf,OAAA,CAACF,KAAK;UAAiB2B,IAAI,EAAEA,IAAK;UAACH,MAAM,EAAEA,MAAO;UAAClB,IAAI,EAAEA;QAAK,GAAhDqB,IAAI,CAAChB,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAA2C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAC3E;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACLnB,OAAA;MAAGc,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAEK,IAAI,EAAC,IAAE,EAACC,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC5C;AAEV,CAAC;AAAChB,EAAA,CAhCIF,SAAS;EAAA,QAIEL,SAAS;AAAA;AAAA8B,EAAA,GAJpBzB,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}