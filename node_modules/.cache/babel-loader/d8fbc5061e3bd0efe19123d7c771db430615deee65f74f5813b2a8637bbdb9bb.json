{"ast":null,"code":"var _jsxFileName = \"/home/ricky/Development/Phase 4/Project/SoundScape-FrontEnd/src/components/Songs.js\",\n  _s = $RefreshSig$();\nimport YouTube from 'react-youtube';\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport \"../css/Songs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Song = _ref => {\n  _s();\n  let {\n    song,\n    artist,\n    user\n  } = _ref;\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const [liked, setLiked] = useState(false);\n  const opts = {\n    height: '350',\n    width: '50%',\n    playerVars: {\n      autoplay: 1 //indicates whether the video should start playing automatically when the player loads or not.\n    }\n  };\n\n  function handleClick(song) {\n    let videoId;\n    song.music_video.startsWith(\"https://youtu.be\") ? videoId = song.music_video.slice(17, 28) : videoId = song.music_video.slice(32, 43);\n    if (videoUrl) {\n      setVideoUrl(''); //set video url to null if play button is clicked twice\n    } else {\n      setVideoUrl(videoId);\n    }\n  }\n  const formData = {\n    user_id: user ? user.id : 1,\n    song_id: song.id\n  };\n  function handleAddSong() {\n    fetch('https://railsapp-soundscape.onrender.com/user_songs', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    });\n    setLiked(true);\n  }\n  let selectedSongId;\n  user ? selectedSongId = user.user_songs.map(userSong => userSong.song).map(userSong => userSong.id) : selectedSongId = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"songRow\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songRow__info\",\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/songs/${song.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-play\",\n        onClick: () => handleClick(song),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-play-fill\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 79\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), user ? selectedSongId.indexOf(song.id) !== -1 || liked ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-heart albumheart liked\",\n        onClick: handleAddSong,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-heart-fill\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 137\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 63\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-heart albumheart\",\n        onClick: handleAddSong,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"16\",\n          height: \"16\",\n          fill: \"currentColor\",\n          className: \"bi bi-heart-fill\",\n          viewBox: \"0 0 16 16\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 92\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 24\n      }, this) : null, videoUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n        videoId: videoUrl,\n        opts: opts,\n        className: \"music_video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/artists/${artist.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Song, \"AnECHeboFTwgS4wdM6YgyT5t/go=\");\n_c = Song;\nexport default Song;\nvar _c;\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"names":["YouTube","React","useState","NavLink","jsxDEV","_jsxDEV","Song","_ref","_s","song","artist","user","videoUrl","setVideoUrl","liked","setLiked","opts","height","width","playerVars","autoplay","handleClick","videoId","music_video","startsWith","slice","formData","user_id","id","song_id","handleAddSong","fetch","method","headers","Accept","body","JSON","stringify","selectedSongId","user_songs","map","userSong","className","children","to","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","fill","viewBox","d","indexOf","fillRule","name","_c","$RefreshReg$"],"sources":["/home/ricky/Development/Phase 4/Project/SoundScape-FrontEnd/src/components/Songs.js"],"sourcesContent":["import YouTube from 'react-youtube'\nimport React, { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport \"../css/Songs.css\";\n\nconst Song = ( { song, artist, user } ) => {\n\n    const [videoUrl, setVideoUrl] = useState(\"\")\n    const [liked, setLiked] = useState(false)\n\n    const opts = {\n        height: '350',\n        width: '50%',\n        playerVars: {            \n            autoplay: 1,  //indicates whether the video should start playing automatically when the player loads or not.\n        },\n    };\n\n    function handleClick(song){\n        let videoId;\n        song.music_video.startsWith(\"https://youtu.be\") ? videoId = song.music_video.slice(17, 28) : videoId = song.music_video.slice(32, 43)\n        \n        if (videoUrl) {\n            setVideoUrl('')  //set video url to null if play button is clicked twice\n        } else {\n            setVideoUrl(videoId)\n            }\n    }\n\n    const formData = {\n        user_id: user ? user.id : 1,\n        song_id: song.id\n      }\n    \n      function handleAddSong() {\n        fetch('https://railsapp-soundscape.onrender.com/user_songs', {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n          body: JSON.stringify(formData)\n        })\n        setLiked(true)\n      }\n\n      let selectedSongId  \n\n      user ? selectedSongId = user.user_songs.map(userSong => userSong.song).map(userSong => userSong.id) : selectedSongId = []\n    \n\n    return (\n        <div className=\"songRow\">\n          <div className=\"songRow__info\">\n\n            <NavLink to={`/songs/${song.id}`}>\n                <h1>{song.title}</h1>\n            </NavLink>\n\n            <i className=\"fa-solid fa-play\" onClick={() => handleClick(song)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-play-fill\" viewBox=\"0 0 16 16\">\n  <path d=\"m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z\"/>\n</svg></i>\n\n            {user ? \n          \n            selectedSongId.indexOf(song.id) !== -1 || liked ? <i className=\"fa-solid fa-heart albumheart liked\" onClick={handleAddSong}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\n            <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\n          </svg></i> : <i className=\"fa-solid fa-heart albumheart\" onClick={handleAddSong}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\n  <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"/>\n</svg></i> \n\n            :\n\n            null\n          \n            }\n\n            \n            {videoUrl && <YouTube videoId={videoUrl} opts={opts} className=\"music_video\"/>}\n\n            <NavLink to={`/artists/${artist.id}`}>\n                <p>{artist.name}</p>\n            </NavLink>\n  \n\n          </div>\n        </div>\n      );\n  };\n  \n  export default Song;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}